# Copyright (c) 2024 Shenzhen Kaihong Digital Industry Development Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/CastEngine/castengine_wifi_display/config.gni")

module_out_path = "sharing/impl"

ohos_unittest("wfd_screen_capture_test") {
  module_out_path = module_out_path
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  include_dirs = [
    "$SHARING_ROOT_DIR/frameworks/innerkitsimpl",
    "$SHARING_ROOT_DIR/services",
    "$SHARING_ROOT_DIR/services/codec/include",
    "$SHARING_ROOT_DIR/services/extend/magic_enum",
    "$SHARING_ROOT_DIR/services/mediachannel",
    "$SHARING_ROOT_DIR/services/mediaplayer/include",
    "$SHARING_ROOT_DIR/services/impl/screen_capture",
    "$SHARING_ROOT_DIR/services/impl/screen_capture/mediasource",
    "$SHARING_ROOT_DIR/services/protocol/frame",
    "./mock",
  ]

  sources = [
    "$SHARING_ROOT_DIR/services/protocol/frame/frame.cpp",
    "wfd_screen_capture_test.cpp",
  ]

  deps = [
    "$SHARING_ROOT_DIR/services:sharing_service",
    "$SHARING_ROOT_DIR/services/common:sharing_common",
    "$SHARING_ROOT_DIR/services/mediachannel:sharing_media_channel_srcs",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "audio_framework:audio_client",
    "audio_framework:audio_renderer",
    "av_codec:av_codec_client",
    "c_utils:utils",
    "c_utils:utilsbase",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
    "window_manager:libdm",
  ]
}
