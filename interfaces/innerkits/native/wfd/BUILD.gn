# Copyright (c) 2023 Shenzhen Kaihong Digital Industry Development Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/CastEngine/castengine_wifi_display/config.gni")

config("sharing_service_config") {
  include_dirs = [
    "$SHARING_ROOT_DIR/services",
    "$SHARING_ROOT_DIR/frameworks/innerkitsimpl/native/wfd",
    "$SHARING_ROOT_DIR/services/interaction/ipc_codec",
    "$SHARING_ROOT_DIR/services/interaction/device_kit",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include",
    "$SHARING_ROOT_DIR/interfaces/innerkits/native/wfd/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include/",
    "//foundation/communication/ipc/ipc/native/c/ipc/include",
    "$SHARING_ROOT_DIR/services/extend/magic_enum",
    "//utils/native/base/include",
  ]

  cflags = [ "-Wno-c++20-extensions" ]
}

ohos_shared_library("sharingwfd_client") {
  install_enable = true

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  include_dirs = [ "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy/include" ]

  sources = [
    "$SHARING_ROOT_DIR/frameworks/innerkitsimpl/native/wfd/wfd_sink_impl.cpp",
    "$SHARING_ROOT_DIR/frameworks/innerkitsimpl/native/wfd/wfd_source_impl.cpp",
    "$SHARING_ROOT_DIR/frameworks/innerkitsimpl/native/wfd/wifi_display.cpp",
    "$SHARING_ROOT_DIR/services/interaction/interprocess/client_factory.cpp",
    "$SHARING_ROOT_DIR/services/interaction/interprocess/inter_ipc_client.cpp",
    "$SHARING_ROOT_DIR/services/interaction/interprocess/inter_ipc_client_stub.cpp",
    "$SHARING_ROOT_DIR/services/interaction/interprocess/inter_ipc_proxy.cpp",
    "$SHARING_ROOT_DIR/services/interaction/interprocess/inter_ipc_stub.cpp",
    "$SHARING_ROOT_DIR/services/interaction/interprocess/ipc_msg_adapter.cpp",
    "$SHARING_ROOT_DIR/services/interaction/scene/scene_format.cpp",
  ]

  public_configs = [
    ":sharing_service_config",
    "$SHARING_ROOT_DIR/tests:coverage_flags",
  ]

  deps = [
    "$SHARING_ROOT_DIR/services/common:sharing_common",
    "$SHARING_ROOT_DIR/services/interaction/ipc_codec:ipc_codec_srcs",
    "$SHARING_ROOT_DIR/services/utils:sharing_utils",
  ]

  external_deps = [
    "c_utils:utils",
    "graphic_surface:surface",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  subsystem_name = "castplus"
  part_name = "sharing_framework"
}
